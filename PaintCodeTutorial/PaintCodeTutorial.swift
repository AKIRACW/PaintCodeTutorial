//
//  PaintCodeTutorial.swift
//  PaintCodeTutorial
//
//  Created by Kris Chen on 15/6/2.
//  Copyright (c) 2015 NERV. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class PaintCodeTutorial : NSObject {

    //// Cache

    private struct Cache {
        static var color: UIColor = UIColor(red: 0.067, green: 0.553, blue: 0.855, alpha: 1.000)
    }

    //// Colors

    public class var color: UIColor { return Cache.color }

    //// Drawing Methods

    public class func drawStopwatch() {

        //// Oval Drawing
        var ovalPath = UIBezierPath(ovalInRect: CGRectMake(15, 30, 220, 220))
        PaintCodeTutorial.color.setFill()
        ovalPath.fill()


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRectMake(114, 2, 22, 32))
        PaintCodeTutorial.color.setFill()
        rectanglePath.fill()


        //// Bezier Drawing
        var bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(212, 30))
        bezierPath.addLineToPoint(CGPointMake(230, 48))
        bezierPath.addLineToPoint(CGPointMake(218, 60))
        bezierPath.addCurveToPoint(CGPointMake(215.45, 57.45), controlPoint1: CGPointMake(218, 60), controlPoint2: CGPointMake(216.99, 58.99))
        bezierPath.addLineToPoint(CGPointMake(202.55, 57.45))
        bezierPath.addCurveToPoint(CGPointMake(202.55, 44.55), controlPoint1: CGPointMake(202.55, 57.45), controlPoint2: CGPointMake(202.55, 47.28))
        bezierPath.addCurveToPoint(CGPointMake(200, 42), controlPoint1: CGPointMake(201.01, 43.01), controlPoint2: CGPointMake(200, 42))
        bezierPath.addCurveToPoint(CGPointMake(200.18, 41.82), controlPoint1: CGPointMake(200, 42), controlPoint2: CGPointMake(200.06, 41.94))
        bezierPath.addCurveToPoint(CGPointMake(212, 30), controlPoint1: CGPointMake(201.68, 40.32), controlPoint2: CGPointMake(212, 30))
        bezierPath.closePath()
        PaintCodeTutorial.color.setFill()
        bezierPath.fill()
    }

    public class func drawStopwatch_Hand() {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()

        //// Bezier 2 Drawing
        CGContextSaveGState(context)
        CGContextTranslateCTM(context, 125, 110)

        var bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(4, -90))
        bezier2Path.addCurveToPoint(CGPointMake(4, -14.46), controlPoint1: CGPointMake(4, -90), controlPoint2: CGPointMake(4, -47.74))
        bezier2Path.addCurveToPoint(CGPointMake(15, 0), controlPoint1: CGPointMake(10.34, -12.71), controlPoint2: CGPointMake(15, -6.9))
        bezier2Path.addCurveToPoint(CGPointMake(4, 14.46), controlPoint1: CGPointMake(15, 6.9), controlPoint2: CGPointMake(10.34, 12.71))
        bezier2Path.addCurveToPoint(CGPointMake(4, 25), controlPoint1: CGPointMake(4, 20.99), controlPoint2: CGPointMake(4, 25))
        bezier2Path.addLineToPoint(CGPointMake(-4, 25))
        bezier2Path.addCurveToPoint(CGPointMake(-4, 14.46), controlPoint1: CGPointMake(-4, 25), controlPoint2: CGPointMake(-4, 20.99))
        bezier2Path.addCurveToPoint(CGPointMake(-15, 0), controlPoint1: CGPointMake(-10.34, 12.71), controlPoint2: CGPointMake(-15, 6.9))
        bezier2Path.addCurveToPoint(CGPointMake(-4, -14.46), controlPoint1: CGPointMake(-15, -6.9), controlPoint2: CGPointMake(-10.34, -12.71))
        bezier2Path.addCurveToPoint(CGPointMake(-4, -90), controlPoint1: CGPointMake(-4, -47.74), controlPoint2: CGPointMake(-4, -90))
        bezier2Path.addLineToPoint(CGPointMake(4, -90))
        bezier2Path.addLineToPoint(CGPointMake(4, -90))
        bezier2Path.closePath()
        UIColor.whiteColor().setFill()
        bezier2Path.fill()

        CGContextRestoreGState(context)
    }

}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
